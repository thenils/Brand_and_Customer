# Generated by Django 4.0 on 2022-07-16 12:04

import apps.custom_fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Enter brand name eg. Apple ', max_length=55)),
                ('phone', models.CharField(help_text='with +cc-number', max_length=15)),
                ('description', models.TextField(blank=True, help_text='optional', null=True)),
                ('address', models.JSONField(default=apps.custom_fields.get_default_address)),
                ('website', models.URLField(blank=True, help_text='optional', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'db_table': 'brand',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='required', max_length=35)),
                ('description', models.TextField(blank=True, help_text='optional', null=True)),
                ('amount_options', models.IntegerField(choices=[(1, 9), (2, 19), (3, 29), (4, 39), (5, 49), (6, 59)], default=1)),
                ('tenure_options', models.IntegerField(choices=[(1, 1), (2, 3), (3, 6), (4, 9), (5, 12), (6, 18)], default=1)),
                ('benefit_type', models.IntegerField(choices=[(1, 'CASHBACK'), (2, 'EXTRA_CASHBACK'), (3, 'WALLET_POINT')], default=1)),
                ('benefit_percentage', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan', to='brand.brand')),
            ],
            options={
                'db_table': 'plan',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='required', max_length=35)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('promotion_type', models.IntegerField(choices=[(1, 'BY NUMBER OF USER'), (2, 'BY TIME PERIOD')], default=1)),
                ('redeemable_user', models.IntegerField(default=0)),
                ('valid_from', models.DateField(blank=True, help_text='It is required if promotion type is 2', null=True, verbose_name='Promotion Valid From')),
                ('valid_to', models.DateField(blank=True, help_text='It is required if promotion type is 2', null=True, verbose_name='Promotion Valid To')),
                ('redeemed', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion', to='brand.plan')),
            ],
            options={
                'db_table': 'promotion',
                'ordering': ['-id'],
            },
        ),
    ]
